name: ci/integration-tests

on:
  workflow_run:
    workflows: [ "ci/unit-tests" ]
    types: [ completed ]
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  integration-test:
    name: integration tests
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      github.event_name == 'pull_request'
    
    services:
      dynamodb-local:
        image: amazon/dynamodb-local:2.5.2
        ports:
          - 8000:8000
        options: >-
          -jar DynamoDBLocal.jar -sharedDb -inMemory
          --health-cmd "curl -f http://localhost:8000/shell || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 10
          --health-start-period 30s
    
    steps:
      - uses: actions/checkout@v4

      - name: üöÄ Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Wait for DynamoDB to be ready
        run: |
          echo "Waiting for DynamoDB to be ready..."
          timeout 60s bash -c 'until curl -f http://localhost:8000/ > /dev/null 2>&1; do sleep 2; done'
          echo "DynamoDB is ready!"

      - name: üõ†Ô∏è Create .env
        run: cp .env.example .env

      - name: ‚úÖ Run integration tests
        env:
          ENVIRONMENT: test
          DYNAMODB_TABLE_NAME: tc4-customer-service-test-customers
          DYNAMODB_REGION: us-east-1
          TEST_DYNAMODB_ENDPOINT: http://localhost:8000
        run: make integration-test